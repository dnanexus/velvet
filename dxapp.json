{
  "name": "velvet",
  "title": "Velvet",
  "summary": "Short read de novo assembler using de Bruijn graphs",
  "dxapi": "1.0.0",
  "version": "0.0.2",
  "inputSpec": [
    {
      "name": "short",
      "label": "Short reads",
      "class": "file",
      "optional": true,
      "patterns": ["*.fasta", "*.fastq", "*.fasta.gz", "*.fastq.gz", "*.fastq.bz2", "*.sam", "*.bam"]
    },
    {
      "name": "shortPaired",
      "label": "Short reads (paired)",
      "class": "file",
      "optional": true,
      "patterns": ["*.fasta", "*.fastq", "*.fasta.gz", "*.fastq.gz", "*.fastq.bz2", "*.sam", "*.bam"]
    },
    {
      "name": "mergeShortPaired",
      "label": "Merge \"Short reads\" and \"Short reads (paired)\" into one paired-end library",
      "help": "If checked, the two files given in \"Short reads\" and \"Short reads (paired)\" will be treated as split files from one paired-end library, and merged together",
      "class": "boolean",
      "default": false
    },
    {
      "name": "short2",
      "label": "Short reads (library 2)",
      "class": "file",
      "optional": true,
      "patterns": ["*.fasta", "*.fastq", "*.fasta.gz", "*.fastq.gz", "*.fastq.bz2", "*.sam", "*.bam"]
    },
    {
      "name": "shortPaired2",
      "label": "Short reads (paired, library 2)",
      "class": "file",
      "optional": true,
      "patterns": ["*.fasta", "*.fastq", "*.fasta.gz", "*.fastq.gz", "*.fastq.bz2", "*.sam", "*.bam"]
    },
    {
      "name": "mergeShortPaired2",
      "label": "Merge \"Short reads (library 2)\" and \"Short reads (paired, library 2)\" into one paired-end library",
      "help": "If checked, the two files given in \"Short reads (library 2)\" and \"Short reads (paired, library 2)\" will be treated as split files from one paired-end library, and merged together",
      "class": "boolean",
      "default": false
    },
    {
      "name": "long",
      "label": "Long reads",
      "class": "file",
      "optional": true,
      "patterns": ["*.fasta", "*.fastq", "*.fasta.gz", "*.fastq.gz", "*.fastq.bz2", "*.sam", "*.bam"]
    },
    {
      "name": "longPaired",
      "label": "Long reads (paired)",
      "class": "file",
      "optional": true,
      "patterns": ["*.fasta", "*.fastq", "*.fasta.gz", "*.fastq.gz", "*.fastq.bz2", "*.sam", "*.bam"]
    },
    {
      "name": "mergeLongPaired2",
      "label": "Merge \"Long reads\" and \"Long reads (paired)\" into one paired-end library",
      "help": "If checked, the two files given in \"Long reads\" and \"Long reads (paired)\" will be treated as split files from one paired-end library, and merged together",
      "class": "boolean",
      "default": false
    },
    {
      "name": "hash_length",
      "label": "Hash Length",
      "class": "int",
      "optional": true,
      "default": 21
    },
    {
        "name": "cov_cutoff", 
        "class": "string", 
        "help": "Removal of low coverage nodes AFTER tour bus or allow the system to infer it (floating-point|auto)", 
        "optional": true
    }, 
    {
        "name": "ins_length", 
        "class": "int",
        "help": "Expected distance between two paired end reads (default: no read pairing)", 
        "optional": true
    }, 
    {
        "name": "read_trkg", 
        "class": "boolean", 
        "help": "Tracking of short read positions in assembly (default: no tracking)", 
        "optional": true
    }, 
    {
        "name": "min_contig_lgth", 
        "class": "int", 
        "help": "Minimum contig length exported to contigs.fa file (default: hash length * 2)", 
        "optional": true
    }, 
    {
        "name": "amos_file", 
        "class": "boolean", 
        "help": "Export assembly to AMOS file (default: no export)", 
        "optional": true
    }, 
    {
        "name": "exp_cov", 
        "class": "string", 
        "help": "Expected coverage of unique regions or allow the system to infer it (floating point|auto)", 
        "optional": true
    }, 
    {
        "name": "long_cov_cutoff", 
        "class": "string", 
        "help": "Removal of nodes with low long-read coverage AFTER tour bus (floating-point)", 
        "optional": true
    }, 
    {
        "name": "ins_length2", 
        "class": "int", 
        "help": "Expected distance between two paired-end reads in the respective short-read dataset (default: no read pairing)", 
        "optional": true, 
        "group": "Advanced options"
    }, 
    {
        "name": "ins_length_long", 
        "class": "int",
        "help": "Expected distance between two long paired-end reads (default: no read pairing)", 
        "optional": true, 
        "group": "Advanced options"
    }, 
    {
        "name": "ins_length2_sd", 
        "class": "int", 
        "help": "Est. standard deviation of respective dataset (default: 10% of corresponding length)", 
        "optional": true, 
        "group": "Advanced options"
    }, 
    {
        "name": "scaffolding", 
        "class": "boolean", 
        "help": "Scaffolding of contigs used paired end information (default: on)", 
        "optional": true, 
        "group": "Advanced options"
    }, 
    {
        "name": "max_branch_length", 
        "class": "int", 
        "help": "Maximum length in base pair of bubble (default: 100)", 
        "optional": true, 
        "group": "Advanced options"
    }, 
    {
        "name": "max_divergence", 
        "class": "string", 
        "help": "Maximum divergence rate between two branches in a bubble (default: 0.2) (floating-point)", 
        "optional": true, 
        "group": "Advanced options"
    }, 
    {
        "name": "max_gap_count", 
        "class": "int", 
        "help": "Maximum number of gaps allowed in the alignment of the two branches of a bubble (default: 3)", 
        "optional": true, 
        "group": "Advanced options"
    }, 
    {
        "name": "min_pair_count", 
        "class": "int", 
        "help": "Minimum number of paired end connections to justify the scaffolding of two long contigs (default: 5)", 
        "optional": true, 
        "group": "Advanced options"
    }, 
    {
        "name": "max_coverage", 
        "class": "string", 
        "help": "Removal of high coverage nodes AFTER tour bus (default: no removal) (floating point)", 
        "optional": true, 
        "group": "Advanced options"
    }, 
    {
        "name": "coverage_mask", 
        "class": "int", 
        "help": "Minimum coverage required for confident regions of contigs (default: 1)", 
        "optional": true, 
        "group": "Advanced options"
    }, 
    {
        "name": "long_mult_cutoff", 
        "class": "int", 
        "help": "Minimum number of long reads required to merge contigs (default: 2)", 
        "optional": true, 
        "group": "Advanced options"
    }, 
    {
        "name": "unused_reads", 
        "class": "boolean", 
        "help": "Export unused reads in UnusedReads.fa file (default: no)", 
        "optional": true, 
        "group": "Advanced options"
    }, 
    {
        "name": "alignments", 
        "class": "boolean", 
        "help": "Export a summary of contig alignment to the reference sequences (default: no)", 
        "optional": true, 
        "group": "Advanced options"
    }, 
    {
        "name": "exportFiltered", 
        "class": "boolean", 
        "help": "Export the long nodes which were eliminated by the coverage filters (default: no)", 
        "optional": true, 
        "group": "Advanced options"
    }, 
    {
        "name": "clean", 
        "class": "boolean", 
        "help": "Remove all the intermediary files which are useless for recalculation (default: no)", 
        "optional": true, 
        "group": "Advanced options"
    }, 
    {
        "name": "very_clean", 
        "class": "boolean", 
        "help": "Remove all the intermediary files (no recalculation possible) (default: no)", 
        "optional": true, 
        "group": "Advanced options"
    }, 
    {
        "name": "paired_exp_fraction", 
        "class": "float", 
        "help": "Remove all the paired end connections which less than the specified fraction of the expected count (default: 0.1)", 
        "optional": true, 
        "group": "Advanced options"
    }, 
    {
        "name": "shortMatePaired", 
        "class": "boolean", 
        "help": "For mate-pair libraries, indicate that the library might be contaminated with paired-end reads (default: no)", 
        "optional": true, 
        "group": "Advanced options"
    }, 
    {
        "name": "conserveLong", 
        "class": "boolean", 
        "help": "Preserve sequences with long reads in them (default: no)", 
        "optional": true, 
        "group": "Advanced options"
    }
  ],
  "outputSpec": [
    {
      "name": "assembly",
      "label": "Assembly",
      "class": "file",
      "patterns": ["*.fasta"]
    }
  ],
  "runSpec": {
    "interpreter": "python2.7",
    "file": "src/velvet.py"
  },
  "details": {
    "contactOrgs": ["org-dnanexus"],
    "repoUrl": "git@github.com:dnanexus/velvet.git",
    "upstreamAuthor": "Daniel Zerbino",
    "upstreamVersion": "1.2.09",
    "upstreamUrl": "http://www.ebi.ac.uk/~zerbino/velvet/",
    "upstreamLicenses": ["GPLv2"],
    "citations": [
        "doi:10.1101/gr.074492.107",
        "doi:10.1371/journal.pone.0008407"
    ]
  },
  "categories": ["Assembly"]
}
